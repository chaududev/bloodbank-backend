@{
    ViewData["Title"] = "Blood Group";
} 

<div class="panel-heading">
    <h3 class="panel-title"><a href="javascript:void(0);" class="toggle-sidebar"><span class="fa fa-angle-double-left" data-toggle="offcanvas" title="Maximize Panel"></span></a>@ViewData["Title"]</h3>
</div>
<div class="panel-body">
    <div class="content-row">
		<h2 class="content-row-title">@ViewData["Title"] Management</h2>
		<div class="demo-container">
			<div id="data-grid-demo">
				<div id="gridContainer"></div>
			</div>
		</div>
    </div>
</div>
<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.6.4/jquery.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/popper.js@1.16.1/dist/umd/popper.min.js"></script>
<!-- Devexpress -->
<link rel="stylesheet" type="text/css" href="https://cdn3.devexpress.com/jslib/17.1.5/css/dx.common.css" />
<link rel="stylesheet" type="text/css" href="https://cdn3.devexpress.com/jslib/17.1.5/css/dx.light.css" />

<script src="https://cdnjs.cloudflare.com/ajax/libs/devextreme/22.2.4/js/dx.all.js"></script>
<script>
	$(function () {
		function getParameterByName(name, url) {
			if (!url) url = window.location.href;
			name = name.replace(/[\[\]]/g, '\\$&');
			var regex = new RegExp('[?&]' + name + '(=([^&#]*)|&|#|$)'),
				results = regex.exec(url);
			if (!results) return null;
			if (!results[2]) return '';
			return decodeURIComponent(results[2].replace(/\+/g, ' '));
		}
		var url = window.location.href;
		var status = getParameterByName('status', url);
		window.history.pushState(null, null, "BloodGroup");
		if (status == 1)
			DevExpress.ui.notify('Success', 'success', 2000);
		jQuery.fn.load = function (callback) {
			var el = $(this);
			el.on('load', callback);
			return el;
		};
		let getAllBloodGroup;
		const InitData = ()=>{
			$.ajax({
				type: 'get',
				async: false,
				url: '/api/BloodGroup',
				success: function (data) {

					getAllBloodGroup = data;
					console.log(data)
				},
				error: function (err) {
					alert('Load Failed');
				}
			});
			InitData();
		}
		const itemsShow = [
			{
				caption: "STT",
				width: 40,
				cellTemplate: function (cellElement, cellInfo) {
					var index = dataGrid.pageIndex() * dataGrid.pageSize() + cellInfo.rowIndex + 1;
					cellElement.text(index);
				},
				formItem: {
					visible: false
				}
			},
			{
				dataField: "id",
				visible: false
			},
			{
				dataField: "name",
				caption: "Name",
				validationRules: [
					{
						type: "required",
						message: "Name is required"
					}
				]
			},
			{
				dataField: "description",
				caption: "Description",
				validationRules: [
					{
						type: "required",
						message: "description is required"
					}
				]
			},
			{
				type: "buttons",
				width: 110,
				buttons: ["edit", "delete"]
			},
		]

		var datasource = [];
		var dataGrid =  $("#gridContainer").dxDataGrid({
			dataSource: {
				store: new DevExpress.data.CustomStore({
					loadMode: "raw",
					load: function () {
						return $.getJSON("/api/BloodGroup").then((rs)=>{
							return rs.data
						})
					},
					 update: function(key, values) {
					 }

				})
			},
			keyExpr: "id",
			showBorders: true,
			paging: {
				pageSize: 10
			},
			searchPanel: {
				visible: true
			},
			pager: {
				showPageSizeSelector: true,
				allowedPageSizes: [10, 20],
				showInfo: true
			},  
			editing: {
				allowDeleting: true,  
				allowAdding: true, 
				mode: "popup",
				allowUpdating: true,
				useIcons: true,
				popup: {
					title: "BloodGroup ",
					showTitle: true,
					width: 700,
					height: 500,
					position: {
						my: "top",
						at: "top",
						of: window
					}
				},
				form: {
					items: [{
						itemType: "group",
						colCount: 2,
						colSpan: 2,
						items: [
							{
								dataField: "id",
								colSpan: 2,
								visible: false,
							},
							{
								dataField: "name",
								colSpan: 2,
							},
							{
								dataField: "description",
								colSpan: 2,
							},
						]
					}]
				}
			},
			columns: itemsShow,
			onRowRemoving: function (e) {
				$.ajax({
					type: 'DELETE',
					async: false,
					url: '/api/BloodGroup/' + e.data.id,
					success: function (dulieu) {
						DevExpress.ui.notify('Success', 'success', 2000);
						window.location = "BloodGroup?status=1";
					},
					error: function (err) {
						e.cancel = true;
						DevExpress.ui.notify('Failed', 'error', 2000);
					}
				});
			},
			onRowInserting: function (e) {
				let formData = {
					name: e.data.name,
					description: e.data.description
				};
				$.ajax({
					type: 'POST',
					data: JSON.stringify(formData),
					contentType: 'application/json',
					async: false,
					url: '/api/BloodGroup',
					success: function (dulieu) {
						window.location = "BloodGroup?status=1";
					},
					error: function (err) {
						e.cancel = true;
						DevExpress.ui.notify('Failed', 'error', 2000);
					}
				});
			},
			onRowUpdating: function (e) {
				const form = { ...e.oldData, ...e.newData }
				let formData = {
					name: form.name,
					description: form.description
				};
				$.ajax({
					type: 'put',
					async: false,
					url: '/api/BloodGroup/' + form.id,
					data: JSON.stringify(formData),
					contentType: 'application/json',
					success: function (dulieu) {

						DevExpress.ui.notify('Success', 'success', 2000);
						window.location = "BloodGroup?status=1";
					},
					error: function (err) {
						e.cancel = true;
						DevExpress.ui.notify('Failed', 'error', 2000);
					}
				});
			}
		}).dxDataGrid("instance");
	});
</script>