@{
	ViewData["Title"] = "User";
}

<div class="panel-heading">
	<h3 class="panel-title"><a href="javascript:void(0);" class="toggle-sidebar"><span class="fa fa-angle-double-left" data-toggle="offcanvas" title="Maximize Panel"></span></a>@ViewData["Title"]</h3>
</div>
<div class="panel-body">
	<div class="content-row">
		<h2 class="content-row-title">@ViewData["Title"] Management</h2>
		<div class="demo-container">
			<div id="data-grid-demo">
				<div id="gridContainer"></div>
			</div>
		</div>
	</div>
</div>
<!-- jQuery library -->
<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.6.4/jquery.min.js"></script>

<!-- Popper JS -->
<script src="https://cdn.jsdelivr.net/npm/popper.js@1.16.1/dist/umd/popper.min.js"></script>

<!-- Latest compiled JavaScript -->
<!-- Devexpress -->
<link rel="stylesheet" type="text/css" href="https://cdn3.devexpress.com/jslib/17.1.5/css/dx.common.css" />
<link rel="stylesheet" type="text/css" href="https://cdn3.devexpress.com/jslib/17.1.5/css/dx.light.css" />

<script src="https://cdnjs.cloudflare.com/ajax/libs/devextreme/22.2.4/js/dx.all.js"></script>
<script>
	//	alert('show')
	$(function () {
		function getParameterByName(name, url) {
			if (!url) url = window.location.href;
			name = name.replace(/[\[\]]/g, '\\$&');
			var regex = new RegExp('[?&]' + name + '(=([^&#]*)|&|#|$)'),
				results = regex.exec(url);
			if (!results) return null;
			if (!results[2]) return '';
			return decodeURIComponent(results[2].replace(/\+/g, ' '));
		}
		var url = window.location.href;
		var status = getParameterByName('status', url);
		window.history.pushState(null, null, "User");
		if (status == 1)
			DevExpress.ui.notify('Thêm User thành công', 'success', 2000);
		jQuery.fn.load = function (callback) {
			var el = $(this);
			el.on('load', callback);
			return el;
		};
		let getAllAuth;
		const InitData = () => {
			$.ajax({
				type: 'get',
				async: false,
				url: '/api/auth',
				success: function (data) {
					getAllAuth = data;
					console.log(data)
				},
				error: function (err) {
					alert('Load dữ liệu Hospital lỗi.');
				}
			});
			InitData();
		}
		const itemsShow = [
			{
				caption: "STT",
				width: 40,
				cellTemplate: function (cellElement, cellInfo) {
					var index = dataGrid.pageIndex() * dataGrid.pageSize() + cellInfo.rowIndex + 1;
					cellElement.text(index);
				},
				formItem: {
					visible: false
				}
			},
			{
				dataField: "id",
				visible: false
			},
			{
				dataField: "password",
				editorOptions: {
					mode: "password"
				},
				visible: false
			},
			{
				dataField: "confirmPassword",
				editorOptions: {
					mode: "password"
				},
				visible: false
			},
			{
				dataField: "userName",
				caption: "UserName",
				validationRules: [
					{
						type: "required",
						message: "Name is required"
					}
				]
			},
			{
				dataField: "fullName",
				caption: "FullName",
				validationRules: [
					{
						type: "required",
						message: "Name is required"
					}
				]
			},
		
			
			{
				dataField: "hospitalId",
				caption: "Hospital Id",
				visible:false,
				validationRules: [
					{
						type: "required",
						message: "Hospital is required"
					}
				],
				editorType: 'dxSelectBox',
				editorOptions:{
					dataSource: {
						store: {
							type: 'odata',
							url: 'api/hospital?$select=id,name',
							key: 'id',
							beforeSend: function (request) {
								request.headers = {
									"Content-Type": "application/json"
								};
							}
						}
					},
					displayExpr: 'name',
					valueExpr: 'id'
			    },
			},
			{
				dataField: "hospital.name",
				caption: "Hospital",
			},
			{
				dataField: "role",
				caption: "Role",
				filterOperations: ["="],
				selectedFilterOperation: "=",
				validationRules: [
					{
						type: "required",
						message: "Role is required"
					}
				],
				editorType: 'dxSelectBox',
				editorOptions: {
					dataSource: [
						{ id: 0, name: 'USER'},
						{ id: 1, name: 'HOSPITAL'},
						{ id: 2, name: 'STAFF'},
						{ id: 3, name: 'ADMIN'}
					],
					displayExpr: 'name',
					valueExpr: 'id'
				},
				customizeText: function (cellInfo) {
					var roleId = cellInfo.value;
					var dataSources = this.editorOptions.dataSource;
					var role = dataSources.filter(function (item) {
						return item.id === roleId;
					})[0];
					return role ? role.name : '';
				}
			},
			{
				dataField: "email",
				caption: "Email",
				visible: false,
				editorOptions: {
					mode: "email"
				},
				validationRules: [
					{
						type: "required",
						message: "Email is required"
					}
				]
			},
			{
				dataField: "birthday",
				caption: "Birthday",
				visible: false,
				dataType: 'date',
				format: 'dd/MM/yyyy',
				editorOptions: {
					type: 'date',
					displayFormat: 'dd/MM/yyyy',
					useMaskBehavior: true
				}
			},
			{
				dataField: "address",
				caption: "Address",
				visible: false
			},
			{
				type: "buttons",
				width: 110,
				buttons: ["edit", "delete"]
			},
		]

		var datasource = [];
		var dataGrid = $("#gridContainer").dxDataGrid({
			filterRow: { visible: true },
			dataSource: {
				store: new DevExpress.data.CustomStore({
					loadMode: "raw",
					load: function () {
						//console.log($.getJSON("/api/Auth"))
						return $.getJSON("/api/Auth").then((rs) => {
							return rs.data
						})
					},
					update: function (key, values) {
					}

				})
			},
			keyExpr: "id",
			showBorders: true,
			paging: {
				pageSize: 10
			},
			searchPanel: {
				visible: false,
			},
			pager: {
				showPageSizeSelector: true,
				allowedPageSizes: [10, 20],
				showInfo: true
			},  //Tạo phân trang
			editing: {
				allowDeleting: true,  //Hiển thị nút xóa
				allowAdding: true,   // Hiển thị nút thêm
				mode: "popup",
				allowUpdating: true,
				useIcons: true,
				popup: {
					title: "Quản lý User ",
					showTitle: true,
					width: 700,
					height: 500,
					position: {
						my: "top",
						at: "top",
						of: window
					}
				},
				form: {
					items: [{
						itemType: "group",
						colCount: 2,
						colSpan: 2,
						items: [
							{
								dataField: "id",
								colSpan: 2,
								visible: false,
							},
							{
								dataField: "userName",
								colSpan: 2,
							},
							{
								dataField: "fullName",
								colSpan: 2,
							},
						
							{
								dataField: "email",
								colSpan: 2,
							},
							
							{
								dataField: "role",
								colSpan: 2,
							},
							{
								dataField: "hospitalId",
								colSpan: 2,
							},
							
							{
								dataField: "password",
								colSpan: 2,
							},
							{
								dataField: "confirmPassword",
								colSpan: 2,
							},
							{
								dataField: "birthday",
								colSpan: 2,
							},
							{
								dataField: "address",
								colSpan: 2,
							},
							
						]
					}]
				}
			},
			columns: itemsShow,
			onRowRemoving: function (e) {
				$.ajax({
					type: 'DELETE',
					async: false,
					url: '/api/Auth/' + e.data.id,
					success: function (dulieu) {
						DevExpress.ui.notify('Xóa User thành công', 'success', 2000);
						window.location = "User?status=1";
					},
					error: function (err) {
						e.cancel = true;
						DevExpress.ui.notify('Xóa lỗi! Vui lòng nhấn F5 và tiến hành Xóa lại.', 'error', 2000);
					}
				});
			},
			onRowInserting: function (e) {
				let formData = {
					username: e.data.userName,
					fullName: e.data.fullName,
					password: e.data.password,
					confirmPassword: e.data.confirmPassword,
					email: e.data.email,
					birthday: new Date(e.data.birthday).toJSON(),
					address: e.data.address,
					hospitalId: e.data.hospitalId,
					role: e.data.role
				};
				console.log(formData);
				$.ajax({
					type: 'POST',
					data: JSON.stringify(formData),
					contentType: 'application/json',
					async: false,
					url: '/api/Auth',
					success: function (dulieu) {
						window.location = "User?status=1";
					},
					error: function (err) {
						e.cancel = true;
						DevExpress.ui.notify('Thêm User không thành công', 'error', 2000);
					}
				});
			},
			onRowUpdating: function (e) {
				const form = { ...e.oldData, ...e.newData }
				let formData = {
					username: form.userName,
					fullName: form.fullName,
					password: form.password,
					confirmPassword: form.confirmPassword,
					email: form.email,
					birthday: form.birthday,
					address: form.address,
					hospitalId: form.hospitalId,
					role: form.role
				};
				console.log(formData);
				$.ajax({
					type: 'put',
					async: false,
					url: '/api/Auth/' + form.id,
					//dataType: 'json',
					data: JSON.stringify(formData),
					contentType: 'application/json',
					success: function (dulieu) {

						DevExpress.ui.notify('Update User thành công', 'success', 2000);
						window.location = "User?status=1";
					},
					error: function (err) {
						e.cancel = true;
						DevExpress.ui.notify('Lỗi. vui lòng thử lại', 'error', 2000);
					}
				});
			}
		}).dxDataGrid("instance");
	});
</script>