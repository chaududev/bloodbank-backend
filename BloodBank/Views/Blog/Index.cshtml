@{
	ViewData["Title"] = "Blog";
}

<div class="panel-heading">
	<h3 class="panel-title"><a href="javascript:void(0);" class="toggle-sidebar"><span class="fa fa-angle-double-left" data-toggle="offcanvas" title="Maximize Panel"></span></a>@ViewData["Title"]</h3>
</div>
<div class="panel-body">
	<div class="content-row">
		<h2 class="content-row-title">@ViewData["Title"] Management</h2>
		<div class="demo-container">
			<div id="data-grid-demo">
				<div id="gridContainer"></div>
			</div>
		</div>
	</div>
</div>
<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.6.4/jquery.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/popper.js@1.16.1/dist/umd/popper.min.js"></script>
<!-- Devexpress -->
<link rel="stylesheet" type="text/css" href="https://cdn3.devexpress.com/jslib/17.1.5/css/dx.common.css" />
<link rel="stylesheet" type="text/css" href="https://cdn3.devexpress.com/jslib/17.1.5/css/dx.light.css" />
<script src="https://cdnjs.cloudflare.com/ajax/libs/devextreme/22.2.4/js/dx.all.js"></script>
<script>
	$(function () {
		function getParameterByName(name, url) {
			if (!url) url = window.location.href;
			name = name.replace(/[\[\]]/g, '\\$&');
			var regex = new RegExp('[?&]' + name + '(=([^&#]*)|&|#|$)'),
				results = regex.exec(url);
			if (!results) return null;
			if (!results[2]) return '';
			return decodeURIComponent(results[2].replace(/\+/g, ' '));
		}
		var url = window.location.href;
		var status = getParameterByName('status', url);
		window.history.pushState(null, null, "Blog");
		if (status == 1)
			DevExpress.ui.notify('Success', 'success', 2000);
		jQuery.fn.load = function (callback) {
			var el = $(this);
			el.on('load', callback);
			return el;
		};
		

		var datasource = [];
		var dataGrid = $("#gridContainer").dxDataGrid({
			dataSource: {
				store: new DevExpress.data.CustomStore({
					loadMode: "raw",
					load: function () {
						return $.getJSON("/api/Blog").then((rs) => {
							return rs.data
						})
					},
					update: function (key, values) {
					}

				})
			},
			keyExpr: "id",
			showBorders: true,
			paging: {
				pageSize: 10
			},
			searchPanel: {
				visible: true
			},
			pager: {
				showPageSizeSelector: true,
				allowedPageSizes: [10, 20],
				showInfo: true
			},
			editing: {
				allowDeleting: true,
				allowAdding: true,
				mode: "popup",
				allowUpdating: true,
				useIcons: true,
				popup: {
					title: "Blog ",
					showTitle: true,
					width: 700,
					height: 500,
					position: {
						my: "top",
						at: "top",
						of: window
					}
				},
				form: {
					items: [{
						itemType: "group",
						colCount: 2,
						colSpan: 2,
						items: [
							{
								dataField: "title",
								label: { text: 'Title' },
								colSpan: 2,
								validationRules: [
									{
										type: "required",
										message: "Title is required"
									},
								],
							},
							{
								dataField: "description",
								label: { text: 'Description' },
								colSpan: 2,
								validationRules: [
									{
										type: "required",
										message: "Description is required"
									},
								],
							},
							{
								dataField: "content",
								label: { text: 'Content' },
								colSpan: 2,
								validationRules: [
									{
										type: "required",
										message: "Content is required"
									},
								],
							},
							{
								dataField: "file",
								colSpan: 2,
								label: {
									text: '',
									visible: false
								},

								template: function (data, itemElement) {
									itemElement.append("<div>")
										.attr('id', 'myUpload')
										.dxFileUploader({
											multiple: false, // cho phép chọn nhiều file
											name: "myFile",
											accept: "image/*",
											selectButtonText: "Chọn file",
											onValueChanged: function (e) { //Khi có ảnh được chọns
												var dataGrid = $("#gridContainer").dxDataGrid("instance");
												options.setValue(e.value);
												console.log(this)

											},
											onFilesUploaded: function (e) { // Khi ảnh được upload
											},
											value: [],
											uploadMode: "FormButtons",
										});
								}
							},
						]
					}
					]
				}
			},
			columns: [
				{
					caption: "STT",
					width: 40,
					cellTemplate: function (cellElement, cellInfo) {
						var index = dataGrid.pageIndex() * dataGrid.pageSize() + cellInfo.rowIndex + 1;
						cellElement.text(index);
					},
					formItem: {
						visible: false
					}
				},
				{
					dataField: "id",
					visible: false
				},
				{
					dataField: "image",
					caption: "Image",
					visible: false,
					template: function (data, itemElement) {
						itemElement.append("<div>")
						.attr('id', 'myUpload')
						.dxFileUploader({
							multiple: false,
							name: "myFile",
							accept: "image/*",
							// Các thuộc tính và sự kiện khác có thể được thêm vào ở đây
							uploadMode: 'useForm',
							onValueChanged: function(e) {
								if (e.value.length > 0) {
									$("#submitBtn").prop("disabled", false);
								} else {
									$("#submitBtn").prop("disabled", true);
								}
							}
						});
					}
				},
				{
					dataField: "title",
					caption: "Title",
					validationRules: [
						{
							type: "required",
							message: "Title is required"
						}
					]
				},
				{
					dataField: "description",
					caption: "Description",
					validationRules: [
						{
							type: "required",
							message: "Description is required"
						}
					]
				},
				{
					dataField: "content",
					caption: "Content",
					visible: false,
					validationRules: [
						{
							type: "required",
							message: "Content is required"
						}
					]
				},
				{
					dataField: "image.url",
					caption: "Image",
					cellTemplate: function (container, options) {
						var img = $("<img>")
							.attr("src", options.value)
							.addClass("image-cell")
							.css({ width: "100px", height: "100px" })
							.appendTo(container);
					},
					allowFiltering: false
				},
				{
					type: "buttons",
					width: 110,
					buttons: ["edit", "delete"]
				},
			],
			onCellPrepared: function (e) {
				if (e.rowType == "header")
					e.cellElement.css("text-align", "center");
				if (e.rowType == "data")
					e.cellElement.css("text-align", "center");
			},
			onFocusedRowChanged: (e) => {
				console.log(e);
			},
			onRowRemoving: function (e) {
				$.ajax({
					type: 'DELETE',
					async: false,
					url: '/api/Blog/' + e.data.id,
					success: function (dulieu) {
						DevExpress.ui.notify('Success', 'success', 2000);
						window.location = "Blog?status=1";
					},
					error: function (err) {
						e.cancel = true;
						DevExpress.ui.notify('Failed', 'error', 2000);
					}
				});
			},
			onRowInserting: function (e) {
				var file = $("#myUpload").dxFileUploader("instance").option("value")[0];
				var formData = new FormData();
				formData.append("Title",e.data.title);
				formData.append("Description",e.data.description);
				formData.append("Content",e.data.content);
				formData.append("file",file);

				console.log(formData);

				$.ajax({
					url: "/api/blog",
					type: "POST",
					data: formData,
					processData: false,
					contentType: false,
					success: function (dulieu) {
						window.location = "Blog?status=1";
					},
					error: function (err) {
						e.cancel = true;
						DevExpress.ui.notify('Failed', 'error', 2000);
					}
				});
			},
			onRowUpdating: function (e) {
				var file = $("#myUpload").dxFileUploader("instance").option("value")[0];
				const form = { ...e.oldData, ...e.newData }
			    var formData = new FormData();
				formData.append("Title",form.title);
				formData.append("Description", form.description);
				formData.append("Content", form.content);
				if (file) formData.append("file",file);
				$.ajax({
					url: "/api/blog" + form.id,
					type: "PUT",
					data: formData,
					processData: false,
					contentType: false,
					success: function (dulieu) {
						DevExpress.ui.notify('Success', 'success', 2000);
						window.location = "Blog?status=1";
					},
					error: function (err) {
						e.cancel = true;
						DevExpress.ui.notify('Failed', 'error', 2000);
					}
				});
			}
		}).dxDataGrid("instance");
	});
</script>